Breadth First Search
graph = {
  '5' : ['3', '7'],
  '3' : ['2', '4'],
  '7' : ['8'],
  '4' : ['8'],
  '2' : [],
  '8' : []
 }

visited = []
queue = []

def bfs(visited, graph, node):
  visited.append(node)
  queue.append(node)
  while queue:
    m = queue.pop(0)
    print(m, end = " ")

    for neighbour in graph[m]:
      if neighbour not in visited:
        visited.append(neighbour) 
        queue.append(neighbour)

print("The bfs is: ")
bfs(visited, graph, '5')
OUTPUT –
The bfs is: 
5 3 7 2 4 8

Depth First Search 
graph = {
  '5' : ['3', '7'],
  '3' : ['2', '4'],
  '7' : ['8'],
  '4' : ['8'],
  '2' : [],
  '8' : []
 }

visited = set()

def dfs(visited, graph, node):
  if node not in visited:
    print(node)
    visited.add(node)
    for neighbour in graph[node]:
      dfs(visited, graph, neighbour)

print("The dfs is :")
dfs(visited, graph, '5')

OUTPUT – 
The dfs is :
5
3
2
4
8
7
